module Archimedes.Sequence.Remove(
    rm
  , remove
  , removeBetween) where

rm :: (Eq a) => [a] -> a -> [a]
rm x y = filter (/= y) x

remove :: (Eq a) => [a] -> [a] -> [a]
remove [] _ = []
remove x a
    | not (x `contains` a) = x
    | (take la x) == a = remove (sub x $ dec la) a
    | otherwise = (head x) : remove (tail x) a
  where la = (length a)

removeBetween :: [a] -> (a,a) -> [a]
removeBetween x (a,b) = (map (remove (remove x (between x (a,b)))) (a:b))
